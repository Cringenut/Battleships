package views

import (
	"Battleships/data"
	"Battleships/web/ships"
	"Battleships/web/battle"
	"fmt"
)

templ MakePlacementCell(coord string) {
	<style>
    .cell, .ship-cell, .possible-end-cell, .placement-cell {
		display: flex; /* Makes cell a flex container */
		justify-content: center; /* Centers content horizontally */
		align-items: center; /* Centers content vertically */
		color: #e6e6e6; /* Sets the text color */
		font-size: 16px; /* Sets the text size */
		background-color: #222; /* Default background color */
		position: relative; /* Allows for absolute positioning of the button */
		z-index: auto;
		width: 100%; /* Fill the grid space */
		height: 100%; /* Ensures the cell fills the height of its container */
		aspect-ratio: 1; /* Ensures that each cell is square */
		overflow: hidden; /* Hide    any content that overflows */
		user-select: none;
    }
    .possible-end-cell {
        background-color: #287700;
    }
	.ship-cell {
		background-color: rgb(19, 19, 114);
	}
	.placement-cell {
		background-color: #ffb02f;
	}
    .invisible-button {
        position: absolute; /* Position the button over the cell */
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: transparent; /* Make the button invisible */
        border: none; /* No border */
        padding: 0;
        cursor: pointer; /* Show pointer on hover */
        outline: none; /* No focus outline */
        z-index: 5;
    }
</style>
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
			<title></title>
		</head>
		<body>
			if (data.StringSliceContains(ships.GetEndCoords(), coord)) {
				<div class="possible-end-cell">
					{ coord }
					<div
						class="invisible-button"
						hx-trigger="click"
						hx-post="/placement/place"
						hx-target="#placement_menu"
						hx-vals={ chosenCoord(coord) }
					></div>
				</div>
			} else if (ships.GetFirstCoord().Coord == coord) {
				<div class="placement-cell">{ coord }</div>
			} else if (ships.IsCoordinateInShips(coord)) {
				<div class="ship-cell">{ coord }</div>
			} else {
				<div class="cell">
					{ coord }
					if ships.GetPlacingShip() != nil {
						<div
							class="invisible-button"
							hx-trigger="click"
							hx-post="/placement/place"
							hx-target="#placement_menu"
							hx-vals={ chosenCoord(coord) }
						></div>
					}
				</div>
			}
		</body>
	</html>
}

func chosenCoord(coord string) string {
	return fmt.Sprintf(`{"chosenCoord": "%s"}`, coord)
}

templ MakePlayerBoardCell(coord string) {
	<style>
    .cell, .ship-cell, .hit-cell, .miss-cell {
        display: flex; /* Makes cell a flex container */
        justify-content: center; /* Centers content horizontally */
        align-items: center; /* Centers content vertically */
        color: #e6e6e6; /* Sets the text color */
        font-size: 24px; /* Sets the text size */
        background-color: #222; /* Default background color */
        position: relative; /* Allows for absolute positioning of the button */
        z-index: auto;
        width: 100%; /* Fill the grid space */
        height: 100%; /* Ensures the cell fills the height of its container */
        aspect-ratio: 1; /* Ensures that each cell is square */
        overflow: hidden; /* Hide    any content that overflows */
		user-select: none;
    }
    .ship-cell, .hit-cell {
        background-color: rgb(19, 19, 114);
    }
    .hit-cell {
        background-image: url("https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Explosion-155624_icon.svg/600px-Explosion-155624_icon.svg.png");
        background-repeat: no-repeat;
        background-size: 84%;
        background-position: center;
    }
    .miss-cell {
        background-image: url("https://i.imgur.com/GFE7hTr.png");
        background-repeat: no-repeat;
        background-size: 60%;
        background-position: center;
    }
</style>
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
			<title></title>
		</head>
		<body>
			switch battle.GetPlayerCellType(coord) {
				case data.Default:
					<div class="cell" id={ coord }>{ coord[1:] }</div>
				case data.Ship:
					<div class="ship-cell" id={ coord }>{ coord[1:] }</div>
				case data.Hit:
					<div class="hit-cell" id={ coord }></div>
				case data.Miss:
					<div class="miss-cell" id={ coord }></div>
				default:
					<div class="cell" id={ coord }>{ coord[1:] }</div>
			}
		</body>
	</html>
}

templ MakeEnemyBoardCell(coord string) {
	<style>
    .cell, .ship-cell, .hit-cell, .miss-cell {
        display: flex; /* Makes cell a flex container */
        justify-content: center; /* Centers content horizontally */
        align-items: center; /* Centers content vertically */
        color: #e6e6e6; /* Sets the text color */
        font-size: 24px; /* Sets the text size */
        background-color: #222; /* Default background color */
        position: relative; /* Allows for absolute positioning of the button */
        z-index: auto;
        width: 100%; /* Fill the grid space */
        height: 100%; /* Ensures the cell fills the height of its container */
        aspect-ratio: 1; /* Ensures that each cell is square */
        overflow: hidden; /* Hide    any content that overflows */
		user-select: none;
    }
    .ship-cell, .hit-cell {
        background-color: rgb(19, 19, 114);
    }
    .hit-cell {
        background-image: url("https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Explosion-155624_icon.svg/600px-Explosion-155624_icon.svg.png");
        background-repeat: no-repeat;
        background-size: 84%;
        background-position: center;
    }
    .miss-cell {
        background-image: url("https://i.imgur.com/GFE7hTr.png");
        background-repeat: no-repeat;
        background-size: 60%;
        background-position: center;
    }
    button.invisible-button {
        position: absolute; /* Position the button over the cell */
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: transparent; /* Make the button invisible */
        border: none; /* No border */
        padding: 0;
        cursor: pointer; /* Show pointer on hover */
        outline: none; /* No focus outline */
    }
    form {
        margin: 0;
        padding: 0;
        border: none;
        height: 100%; /* Ensure the form fills its container */
        width: 100%; /* Ensure the form fills its container */
        position: relative; /* Required for absolute positioning of the button */
        overflow: hidden; /* Hide    any content that overflows */
    }
</style>
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
			<title></title>
		</head>
		<body>
			switch battle.GetEnemyCellType(coord) {
				case data.Default:
					<form id="" hx-boost="true" hx-post="/handle/fire" hx-swap="outerHTML" hx-target="#enemy_board">
						<input type="hidden" name="coord" value={ coord }/>
						<div class="cell" id={ coord }>
							{ coord }
							if (data.GetGameStatus().ShouldFire) {
								<button class="invisible-button" type="submit"></button>
							}
						</div>
					</form>
				case data.Ship:
				case data.Hit:
					<div class="hit-cell" id={ coord }></div>
				case data.Miss:
					<div class="miss-cell" id={ coord }></div>
				default:
					<form id="" hx-boost="true" hx-post="/handle/fire" hx-swap="outerHTML" hx-target="#enemy_board">
						<input type="hidden" name="coord" value={ coord }/>
						<div class="cell" id={ coord }>
							{ coord[1:] }
							if (data.GetGameStatus().ShouldFire) {
								<button class="invisible-button" type="submit"></button>
							}
						</div>
					</form>
			}
		</body>
	</html>
}
