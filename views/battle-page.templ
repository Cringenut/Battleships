package views

import (
	"Battleships/data"
	"strconv"
)

templ MakeBattlePage() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
			<link href="https://fonts.googleapis.com/css2?family=Special+Elite&display=swap" rel="stylesheet"/>
			<link rel="icon" href="https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/USRC_Salmon_P_Chase_-_LoC_4a25817u.jpg/640px-USRC_Salmon_P_Chase_-_LoC_4a25817u.jpg"></link>
			<title>Battle</title>
			<style>
		body, html {
			height: 100%;
			width: 100%;
			margin: 0;
			background-size: cover;
			background-position: center;
			font-family: "Special Elite", system-ui;
			display: flex;
			color: white;
			background-image: url("https://www.shutterstock.com/shutterstock/videos/32777806/thumb/1.jpg");
			background-attachment: fixed;
			z-index: -2;
		}
		body::after {
			content: '';
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(60, 57, 57, 0.65); /* Adjust the tint color and opacity here */
			z-index: -1;
		}
		.container {
			display: flex;
			flex-direction: column;
		}
		.fixed-width {
			width: 640px;
			position: relative;
		}
		.flexible-width {
			flex: 1;
		}
		.top-element, .top-element1, .surrender-button {
			height: 40px;
			display: flex;
			flex-direction: column;
			justify-content: center;
			padding-left: 30px;
			padding-right: 30px;
		}
		.rectangle {
			width: 200px;
			height: 100px;
			background-color: transparent;
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			color: white;
			position: absolute;
			margin-right: -100px;
			right: 0; /* Position at the right edge of the top element */
			z-index: 10; /* Ensures it is on top of other elements */
		}
		.top-element {
			align-items: flex-start;
		}
		.top-element1 {
			align-items: flex-end;
		}
		.surrender-button {
			height: 48px;
			background-color: rgba(255, 0, 0, 0.8);
			align-content: center;
			align-items: center;
		}
		.nickname-text {
			font-size: 20px;
			padding-top: 22px;
			cursor: pointer;
		}
		.bottom-text {
			font-size: 16px;
			padding-top: 4px;
		}
		.timer-text {
			font-size: 20px;
			padding-top: 4px;
		}
		.field-left, .field-right, .side-menu {
			flex: 1;
			display: flex;
			position: relative;
		}
		.field-left, .field-right {
			padding-bottom: 12px;
		}
		.side-menu {
			flex-direction: column;
			background-color: rgba(52, 51, 51, 0.5);
		}
		.token-text {
			width: 400px;
			height: 32px;
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			color: white;
			position: absolute;
			margin-right: -200px;
			right: 0; /* Position at the right edge of the top element */
			bottom: 0; /* Position at the bottom of the page */
			z-index: 10; /* Ensures it is on top of other elements */
		}
		.fullscreen-container {
			position: fixed;
			top: 0;
			left: 0;
			height: 100%;
			width: 100%;
			background-color: orange; /* Semi-transparent background */
			display: flex;
			justify-content: center;
			align-items: center;
			text-align: center;
			z-index: 999; /* Ensures it is above other content */
			pointer-events: none; /* Ensures it doesn't capture any mouse events */
			box-sizing: border-box;
		}
	</style>
		</head>
		<body id="battle_body">
			<script>
			document.addEventListener("htmx:afterRequest", function () {
				let timerElement = document.getElementById("time")
				let timeLeft = parseInt(timerElement.textContent);
				function updateTimer() {
					if (timeLeft > 0) {
						timeLeft--
						timerElement.textContent = timeLeft;
					} else {
						clearInterval(countdown);
					}
				}
				let countdown = setInterval(updateTimer, 1000);
			});
		</script>
			<div class="container fixed-width">
				<div class="top-element">
					<div
						class="nickname-text"
						hx-post="/player/info"
						hx-swap="outerHTML"
						hx-target="#player_info"
						hx-trigger="click"
					>
						{ data.GetPlayerNickname() }
					</div>
					@MakePlayerAccuracyField()
					<div class="rectangle">
						@MakeTurnText()
						<div id="timer">
							@MakeBattleTimer("60")
						</div>
					</div>
					<div class="token-text">
						{ data.GetToken() }
					</div>
				</div>
				<div class="field-left">
					@MakePlayerBoard()
				</div>
			</div>
			<div class="container fixed-width">
				<div class="top-element1">
					<div
						class="nickname-text"
						hx-post="/enemy/info"
						hx-swap="outerHTML"
						hx-target="#player_info"
						hx-trigger="click"
					>{ data.GetEnemyData().Nickname }</div>
					@MakeEnemyAccuracyField()
				</div>
				<div class="field-right">
					@MakeEnemyBoard()
				</div>
			</div>
			<div class="container flexible-width">
				<div class="side-menu" id="side_menu"></div>
				<div class="surrender-button">
					<div>Surrender</div>
				</div>
				<div hx-trigger="every 0.5s" hx-post="/battle/shots/history" hx-target="#side_menu" hx-swap="innerHTML"></div>
				<div hx-trigger="every 0.5s" hx-get="/shots" hx-target="this" hx-swap="none"></div>
				<div hx-trigger="every 0.5s" hx-post="/timer" hx-target="#timer" hx-swap="innerHTML"></div>
				<div hx-trigger="every 1s" hx-get="/board/target/enemy" hx-target="#enemy_board" hx-swap="outerHTML"></div>
				<div hx-trigger="every 0.2s" hx-get="/board/target/player" hx-target="#player_board" hx-swap="outerHTML"></div>
			</div>
			<div id="player_info"></div>
		</body>
	</html>
}

templ MakeTurnText() {
	<!DOCTYPE html>
	<html lang="en">
		<style>
    .turn-text {
        font-size: 18px;
        padding-top: 28px;
    }
</style>
		<head>
			<link href="https://fonts.googleapis.com/css2?family=Special+Elite&display=swap" rel="stylesheet"/>
		</head>
		<body>
			<div
				class="turn-text"
				id="turn"
				hx-get="/status"
				hx-trigger="every 0.8s"
				hx-target="this"
				hx-swap="outerHTML"
			>
				if (data.GetGameStatus().GameStatus == "ended") {
					<div
						hx-post="/battle/ended"
						hx-trigger="load, once"
						hx-swap="innerHTML"
						hx-target="#battle_body"
					></div>
				}
				if (data.GetGameStatus().ShouldFire) {
					Your turn
				} else {
					Enemy turn
				}
			</div>
		</body>
	</html>
}

templ MakeEnemyAccuracyField() {
	<div
		class="bottom-text"
		id="enemy_accuracy"
		hx-post="/battle/enemy/accuracy"
		hx-swap="outerHTML"
		hx-target="this"
		hx-trigger="load"
	>Accuracy: { strconv.FormatFloat(data.GetEnemyAccuracy(), 'f', 1, 64) }%</div>
}

templ MakePlayerAccuracyField() {
	<div
		class="bottom-text"
		id="enemy_accuracy"
		hx-post="/battle/player/accuracy"
		hx-swap="outerHTML"
		hx-target="this"
		hx-trigger="load"
	>Accuracy: { strconv.FormatFloat(data.GetPlayerAccuracy(), 'f', 1, 64) }%</div>
}

templ MakeShotsHistoryItem(coord string, res string, owner string) {
	<style>
	.shot-history-container {
		padding-top: 2px;
		width: 100%;
		height: 38px;
		background-color: rgba(48, 48, 48, 0.9);
		display: flex;
	}

	.shot-history-coord {
		width: 15%;
		height: 100%;
		padding-left: 4px;
		font-size: 16px;
		display: flex;
		justify-content: center;
		align-items: center;
		text-align: center;
	}

	.shot-history-result {
		width: 20%;
		height: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
		text-align: left;
		bottom: 0;
	}

	.shot-history-nick {
		width: 62%;
		height: 100%;
		display: flex;
		justify-content: left;
		align-items: center;
		text-align: left;
		bottom: 0;
	}
</style>
	<body>
		<div class="shot-history-container">
			<div class="shot-history-coord">{ coord }</div>
			<div class="shot-history-result">{ res }</div>
			<div class="shot-history-nick">{ owner }</div>
		</div>
	</body>
}
