package views

import (
    "Battleships/data"
)

templ MakePlacementBoard() {
<style>
    .placement-board {
        border-radius: 2px;
        width: 100%;
        aspect-ratio: 1;
        background-color: rgba(44, 44, 44, 0.9);
        margin: 30px;
        display: grid;
        grid-template-columns: repeat(10, 1fr);
        grid-template-rows: repeat(10, 1fr);
        gap: 3px;
        padding: 4px;
        z-index: 1;
    }
</style>
<html>
<head>
    <script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="boards.css"></link>
    <title>Battle</title>
</head>
<body>
<div class="placement-board" id="placement-board">
    for row := 0; row < 10; row++ {
        for col := 0; col < 10; col++ {
            @MakePlacementCell(data.CalculateCellCoord(row, col))
        }
    }
</div>
</body>
</html>
}

templ MakeShowPlacementBoard() {
<style>
    .placement-board {
        border-radius: 2px;
        width: 38%;
        aspect-ratio: 1;
        background-color: rgba(44, 44, 44, 0.9);
        margin: 30px;
        display: grid;
        grid-template-columns: repeat(10, 1fr);
        grid-template-rows: repeat(10, 1fr);
        gap: 3px;
        padding: 4px;
        z-index: 1;
    }
    .random-overlay {
        position: absolute;
        top: -3px;
        left: -3px;
        width: calc(100% + 6px);
        height: calc(100% + 6px);
        background: rgba(0, 0, 0, 0.2);
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 28px;
        color: white;
        backdrop-filter: blur(3px);
        z-index: 2;
    }
</style>
<html>
<head>
    <script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="mystyle.css"></link>
    <title>Battle</title>
</head>
<body>
<div class="placement-board" id="show-placement-board">
    for row := 0; row < 10; row++ {
    for col := 0; col < 10; col++ {
    @MakeShowPlacementCell()
    }
    }
    switch data.GetPlayerShipPlacementType() {
    case data.Random:
        <div class="random-overlay">Random</div>
    default:
    fmt.Println("Invalid level")
    }
</div>
</body>
</html>
}

templ MakePlayerBoard() {
<html lang="en">
<head>
    <script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
    <title>Battle</title>
</head>
<style>
    .player-board {
        border-radius: 2px;
        width: 100%;
        aspect-ratio: 1;
        background-color: rgba(44, 44, 44, 0.9);
        margin: 30px;
        display: grid;
        grid-template-columns: repeat(10, 1fr);
        grid-template-rows: repeat(10, 1fr);
        gap: 3px;
        padding: 4px;
        z-index: 1;
    }
</style>
<body>
<div class="player-board" id="player_board">
    for row := 0; row < 10; row++ {
        for col := 0; col < 10; col++ {
            @MakePlayerBoardCell("p" + data.CalculateCellCoord(row, col))
        }
    }
</div>
</body>
</html>
}

templ MakeEnemyBoard() {
<html lang="en">
<head>
    <script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
    <title>Battle</title>
</head>
<style>
    .enemy-board {
        border-radius: 2px;
        width: 100%;
        aspect-ratio: 1;
        background-color: rgba(44, 44, 44, 0.9);
        margin: 30px;
        display: grid;
        grid-template-columns: repeat(10, 1fr);
        grid-template-rows: repeat(10, 1fr);
        gap: 3px;
        padding: 4px;
        z-index: 1;
    }
</style>
<body>
<div class="enemy-board" id="enemy_board">
    for row := 0; row < 10; row++ {
    for col := 0; col < 10; col++ {
    @MakeEnemyBoardCell(data.CalculateCellCoord(row, col))
    }
    }
</div>
</body>
</html>
}